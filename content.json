[{"title":"基于ArcGIS api for js+React的插件式gis框架","date":"2020-03-06T02:36:48.000Z","path":"2020/03/06/基于ArcGIS-api-for-js-React的插件式gis框架/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"},{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"},{"name":"ArcGIS","slug":"ArcGIS","permalink":"http://www.zhushuaibing.top/tags/ArcGIS/"}]},{"title":"重复造轮子之Router","date":"2020-03-05T08:34:25.000Z","path":"2020/03/05/重复造轮子之Router/","text":"","tags":[{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"},{"name":"造轮子","slug":"造轮子","permalink":"http://www.zhushuaibing.top/tags/%E9%80%A0%E8%BD%AE%E5%AD%90/"},{"name":"Router","slug":"Router","permalink":"http://www.zhushuaibing.top/tags/Router/"}]},{"title":"Unity 3D Web实践","date":"2020-03-05T08:24:25.000Z","path":"2020/03/05/Unity-3D-Web实践/","text":"","tags":[{"name":"Unity","slug":"Unity","permalink":"http://www.zhushuaibing.top/tags/Unity/"}]},{"title":"React系列之ref","date":"2020-03-05T08:22:40.000Z","path":"2020/03/05/React系列之ref/","text":"","tags":[{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"}]},{"title":"npm/cnpm&&yarn/tyarn","date":"2020-03-05T08:21:59.000Z","path":"2020/03/05/npm-cnpm-yarn-tyarn/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"},{"name":"npm","slug":"npm","permalink":"http://www.zhushuaibing.top/tags/npm/"},{"name":"yarn","slug":"yarn","permalink":"http://www.zhushuaibing.top/tags/yarn/"}]},{"title":"重复造轮子之Redux","date":"2020-03-05T08:20:51.000Z","path":"2020/03/05/重复造轮子之Redux/","text":"","tags":[{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"},{"name":"造轮子","slug":"造轮子","permalink":"http://www.zhushuaibing.top/tags/%E9%80%A0%E8%BD%AE%E5%AD%90/"},{"name":"Redux","slug":"Redux","permalink":"http://www.zhushuaibing.top/tags/Redux/"}]},{"title":"React系列之state与setState","date":"2020-03-05T08:17:54.000Z","path":"2020/03/05/React系列之state与setState/","text":"","tags":[{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"}]},{"title":"重复造轮子之React脚手架","date":"2020-03-05T08:15:30.240Z","path":"2020/03/05/重复造轮子之React脚手架/","text":"title: 重复造轮子之React脚手架date: 2020-03-07 16:15:30tags: - 造轮子 - React - Webpack 写在前面严格来说，我的第一门计算机语言是C#，接到一个新的项目或者自己要做一个demo时，就是打开Visual Studio -&gt; New project -&gt; Console/Winform/WPF/类库.. ，在下一步与下一步中，一个C#的项目就创建好了，默认包含了编译环境和开发环境，你只需要写完自己的业务逻辑，然后按F5就OK了，而无需操心代码是如何编译与运行的。前端开发中有一个名词叫“脚手架”，最开始一直不太明白其具体含义，直到我开始用create-react-app，发现无非是新瓶装旧酒罢了。C#的编译过程比较明了，从main函数入，而要明白create-react-app的打包则需要了解webpack是如何工作的。 脚手架搭建步骤创建Node工程123mkdir my-create-react-appcd my-create-react-appnpm init 根据提示完善工程信息 安装依赖安装webpack 1cnpm i webpack webpack-cli webpack-dev-server -D 创建配置文件根目录创建webpack.config.js 123456789101112const path = require('path');module.exports = &#123; entry: './src/index.js', output: &#123; path: path.resolve(__dirname, 'dist'), filename: 'bundle.js' &#125;, module: &#123;&#125;, plugins: [], mode: 'development',&#125; 定义entry、output、module、plugins、mode。 安装html-webpack-plugin插件打包后的js文件需要引入到html中，此时用到html-webpack-plugin插件，首先安装插件 1cnpm i html-webpack-plugin -D 然后在config中引入html-webpack-plugin和配置 12345678const HtmlWebpackPlugin = require('html-webpack-plugin');...plugins: [new HtmlWebpackPlugin(&#123; hash: true, template: './public/index.html', &#125;)], 安装React安装React和ReactDom到dependencies，而不是devDependencies 1cnpm i react react-dom -S 然后创建入口文件index.js 1234import React from 'react';import ReactDom from 'react-dom';ReactDom.render(&lt;h1&gt;Hello React&lt;/h1&gt;,document.getElementById('app')); 然后在package.json中配置脚本 1234\"scripts\": &#123; \"start\": \"webpack-dev-server --config webpack.config.js\", \"build\": \"webpack --config webpack.config.js\",&#125;, 然后npm start启动，打印如下错误，webpack只能打包ES5的js文件，ES6和jsx不能打包，需要引入babel ERROR in ./src/index.js 4:20Module parse failed: Unexpected token (4:20)You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders| import ReactDom from ‘react-dom’;|ReactDom.render(()=&gt;Hello React,document.getElementById(‘app’)); 安装和配置babel安装babel和preset-react，preset-react是对jsx和react编译的支持 1cnpm install babel-loader @babel&#x2F;preset-react @babel&#x2F;preset-env @babel&#x2F;core -D 然后根目录创建babel配置文件.babelrc，简单配置如下 1234&#123; \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]&#125;` 再次npm start运行，则提示成功，webpack-dev-server启动了一个静态服务器，浏览器显示运行结果。运行npm run build打包，则生成dist文件夹，其中包含bundle.js和index.html文件。 配置loader上面配置非常简单，还没有添加对css、图片等格式的加载依赖： 加载css安装css-loader 1cnpm i style-loader css-loader -D 配置css加载：在module-rules下添加 123456789101112&#123; test: /\\.css$/i, use: [ 'style-loader', &#123; loader: 'css-loader', options: &#123; modules: true, &#125;, &#125;, ],&#125;, 其中 123options: &#123; modules: true,&#125;, 表明启用css module方式。 加载图片安装url-loader，url-loader 功能类似于 file-loader，但是在文件大小（单位 byte）低于指定的限制时，可以返回一个 DataURL。对于小图片等资源常用这样的操作，好处是减少资源的请求次数；或者在某些场景下，保证图片在html加载或渲染时就能展示，不需要再发起请求。 1cnpm i url-loader -D 同CSS方式添加以下配置: 1234567891011&#123; test: /\\.(png|jpg|gif)$/i, use: [ &#123; loader: 'url-loader', options: &#123; limit: 8192, &#125;, &#125;, ],&#125;, 其中 123options: &#123; limit: 8192,&#125; 表明对小于8192byte的文件转为base64，以DataURL方式加载。 webpack-dev-server在实际开发工作中，有一个很重要的问题是打包后的js文件和html文件如何实时预览，在webpack之前的版本中，需要引入webpack-dev-middleware 、webpack-hot-middleware 等中间件方便用户快速的实现页面预览，热加载等功能，但在webpack4版本中，推出webpack-dev-server，用户只需要配置webpack的devServer项，在开发环境中，以webpack-dev-server替换 webpack 来执行webpack配置文件，便能按照配置满足自己的开发需要，配置如下： 1234567891011devServer: &#123; port: 8081, host: localhost, contentBase: path.join(__dirname, 'public'), proxy: &#123; '/api': &#123; target: 'http://localhost:3000', pathRewrite: &#123;'^/api' : ''&#125; &#125; &#125;&#125; 开启一个 port:8081 端口的静态服务器，host为localhost，如果需要在手机上访问，则需将host配置成0.0.0.0,则项目不仅可以在电脑上以localhost和127.0.0.1进行访问，还可以在192.168..上访问，保证手机和电脑在一个局域网下面即可。contentBase为静态服务器的目录；proxy为代理，类似于Nginx的反向代理，可以将后端服务进行代理，这里面用到的是http-proxy-middleware这个库。 devtooldevtool有好些种配置，我这里设置为source-map，在开发环境下可以看到原始的源代码而不是打包后的es5代码。 和create-react-app比较到这里一个及其简单乃至简陋的React开发环境就搭建OK了，自然是比不了create-react-app，在create-react-app的package.json中用的是react-scripts这个脚本命令，我们简单探索一下react-scripts： react-scripts在node_modules\\.bin目录下，看到react-scripts.cmd文件，内容： 12345678910111213141516171819@ECHO offSETLOCALCALL :find_dp0SET _maybeQuote&#x3D;&quot;IF EXIST &quot;%dp0%\\node.exe&quot; ( SET &quot;_prog&#x3D;%dp0%\\node.exe&quot;) ELSE ( SET _maybeQuote&#x3D; SET &quot;_prog&#x3D;node&quot; SET PATHEXT&#x3D;%PATHEXT:;.JS;&#x3D;;%)%_maybeQuote%%_prog%%_maybeQuote% &quot;%dp0%\\..\\_react-scripts@3.4.0@react-scripts\\bin\\react-scripts.js&quot; %*ENDLOCALEXIT &#x2F;b %errorlevel%:find_dp0SET dp0&#x3D;%~dp0EXIT &#x2F;b 可以看出脚本都存储在_react-scripts@3.4.0@react-scripts\\bin\\react-scripts.js中， 这里面封装了所有的loader、plugin、devSever等，以至于项目中极其简洁，如果需要在react-scripts之上额外配置一些自己的配置，就稍微有一点麻烦了，需要用react-scripts eject命令或者react-app-rewired来实现，不多赘述。 roadhog roadhog 是一个 cli 工具，提供 server、 build 和 test 三个命令，分别用于本地调试和构建，并且提供了特别易用的 mock 功能。命令行体验和 create-react-app 一致，配置略有不同，比如默认开启 css modules，然后还提供了 JSON 格式的配置方式。 github地址:https://github.com/sorrycc/roadhog 总结实际项目开发中，我们当然可以自己从头配置webpack，但是需要我们对其有足够的了解，不然会有很多坑，这里不过是为了学习webpack的一些基本配置。最后建议用已经成熟的解决方案，roadhog个人感觉就很不错，在create-react-app的基础上，解决了不支持配置这个痛点。","tags":[]},{"title":"Cesium插件之Tooltip","date":"2020-03-05T08:10:25.000Z","path":"2020/03/05/Cesium插件之Tooltip/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"},{"name":"插件","slug":"插件","permalink":"http://www.zhushuaibing.top/tags/%E6%8F%92%E4%BB%B6/"}]},{"title":"Cesium插件之标绘","date":"2020-03-05T08:05:53.000Z","path":"2020/03/05/Cesium插件之标绘/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"},{"name":"插件","slug":"插件","permalink":"http://www.zhushuaibing.top/tags/%E6%8F%92%E4%BB%B6/"}]},{"title":"Cesium插件之Measurement","date":"2020-03-05T08:05:14.000Z","path":"2020/03/05/Cesium插件之Measurement/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"},{"name":"插件","slug":"插件","permalink":"http://www.zhushuaibing.top/tags/%E6%8F%92%E4%BB%B6/"}]},{"title":"Cesium插件之Coordinate","date":"2020-03-05T08:02:31.000Z","path":"2020/03/05/Cesium插件之Coordinate/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"},{"name":"插件","slug":"插件","permalink":"http://www.zhushuaibing.top/tags/%E6%8F%92%E4%BB%B6/"}]},{"title":"Cesium插件之Compass","date":"2020-03-05T08:01:56.000Z","path":"2020/03/05/Cesium插件之Compass/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"},{"name":"插件","slug":"插件","permalink":"http://www.zhushuaibing.top/tags/%E6%8F%92%E4%BB%B6/"}]},{"title":"Cesium插件之HomeButton","date":"2020-03-05T08:01:44.000Z","path":"2020/03/05/Cesium插件之HomeButton/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"},{"name":"插件","slug":"插件","permalink":"http://www.zhushuaibing.top/tags/%E6%8F%92%E4%BB%B6/"}]},{"title":"Cesium系列之pick","date":"2020-03-05T08:00:54.000Z","path":"2020/03/05/Cesium系列之pick/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"Cesium系列之获取高程","date":"2020-03-05T08:00:47.000Z","path":"2020/03/05/Cesium系列之获取高程/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"Cesium系列之地图事件","date":"2020-03-05T08:00:11.000Z","path":"2020/03/05/Cesium系列之地图事件/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"Cesium系列之Primitive","date":"2020-03-05T07:59:51.000Z","path":"2020/03/05/Cesium系列之Primitive/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"Cesium系列之Entity","date":"2020-03-05T07:59:37.000Z","path":"2020/03/05/Cesium系列之Entity/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"Cesium系列之坐标系","date":"2020-03-05T07:56:19.000Z","path":"2020/03/05/Cesium系列之坐标系/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"Cesium系列之Camera","date":"2020-03-05T07:56:05.000Z","path":"2020/03/05/Cesium系列之Camera/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"Cesium系列之Viewer","date":"2020-03-05T07:55:56.000Z","path":"2020/03/05/Cesium系列之Viewer/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"}]},{"title":"React系列之受控组件与非受控组件","date":"2020-03-05T07:52:06.000Z","path":"2020/03/05/React系列之受控组件与非受控组件/","text":"","tags":[{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"}]},{"title":"React系列之高阶组件","date":"2020-03-05T07:50:14.000Z","path":"2020/03/05/React系列之高阶组件/","text":"","tags":[{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"}]},{"title":"React系列之组件生命周期","date":"2020-03-05T07:46:09.000Z","path":"2020/03/05/React系列之组件生命周期/","text":"","tags":[{"name":"React","slug":"React","permalink":"http://www.zhushuaibing.top/tags/React/"}]},{"title":"JavaScript系列之回调、Callback和EventLoop","date":"2020-03-05T07:43:12.000Z","path":"2020/03/05/JavaScript系列之回调、Callback和EventLoop/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之扩展运算符","date":"2020-03-05T07:38:50.000Z","path":"2020/03/05/JavaScript系列之扩展运算符/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之File","date":"2020-03-05T07:33:29.000Z","path":"2020/03/05/JavaScript系列之File/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之cookie/Localstorage/SessionStorage/IndexedDB","date":"2020-03-05T07:32:12.000Z","path":"2020/03/05/JavaScript系列之cookie-Localstorage-SessionStorage-IndexedDB/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之Ajax","date":"2020-03-05T07:31:02.000Z","path":"2020/03/05/JavaScript系列之Ajax/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之Event","date":"2020-03-05T07:30:42.000Z","path":"2020/03/05/JavaScript系列之Event/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之call/apply","date":"2020-03-05T07:28:57.000Z","path":"2020/03/05/JavaScript系列之call-apply/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之Module","date":"2020-03-05T07:27:42.000Z","path":"2020/03/05/JavaScript系列之Module/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之Promise","date":"2020-03-05T07:26:55.000Z","path":"2020/03/05/JavaScript系列之Promise/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之Class","date":"2020-03-05T07:26:43.000Z","path":"2020/03/05/JavaScript系列之Class/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之构造函数、类与对象","date":"2020-03-05T07:26:10.000Z","path":"2020/03/05/JavaScript系列之构造函数、类与对象/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之this","date":"2020-03-05T07:24:52.000Z","path":"2020/03/05/JavaScript系列之this/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"JavaScript系列之继承","date":"2020-03-05T06:55:21.000Z","path":"2020/03/05/JavaScript系列之继承/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"}]},{"title":"基于Cesium+React的插件式gis框架","date":"2020-03-05T06:54:32.000Z","path":"2020/03/05/基于Cesium-React的插件式gis框架/","text":"","tags":[{"name":"Cesium","slug":"Cesium","permalink":"http://www.zhushuaibing.top/tags/Cesium/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"},{"name":"框架","slug":"框架","permalink":"http://www.zhushuaibing.top/tags/%E6%A1%86%E6%9E%B6/"}]},{"title":"前后端分离之代理","date":"2020-03-05T06:53:57.000Z","path":"2020/03/05/前后端分离之代理/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"},{"name":"前后端分离","slug":"前后端分离","permalink":"http://www.zhushuaibing.top/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"},{"name":"nginx","slug":"nginx","permalink":"http://www.zhushuaibing.top/tags/nginx/"},{"name":"proxy","slug":"proxy","permalink":"http://www.zhushuaibing.top/tags/proxy/"}]},{"title":"发布npm包到npm仓库","date":"2020-03-05T06:53:36.000Z","path":"2020/03/05/发布npm包到npm仓库/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"},{"name":"npm","slug":"npm","permalink":"http://www.zhushuaibing.top/tags/npm/"}]},{"title":"JavaScript 模块化进程","date":"2020-03-05T06:53:00.000Z","path":"2020/03/05/JavaScript模块化进程/","text":"","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.zhushuaibing.top/tags/JavaScript/"},{"name":"Module","slug":"Module","permalink":"http://www.zhushuaibing.top/tags/Module/"}]},{"title":"Hexo + GitHub Pages 搭建个人博客网站","date":"2020-03-05T05:41:33.000Z","path":"2020/03/05/Hexo-GitHub-Pages-搭建个人博客网站/","text":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.zhushuaibing.top/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"http://www.zhushuaibing.top/tags/Github/"}]},{"title":"hello world-就从这里开始吧","date":"2020-03-04T05:59:25.000Z","path":"2020/03/04/hello-world-就从这里开始吧/","text":"不积跬步，无以至千里；不积小流，无以成江海。-荀子《劝学》 就从这里开始吧，一直想着写点东西，之前也在csdn、博客园写过一点或者转过一点，也总是不能持续，后来也注册了个公众号，平台很好，体验太差，想着如果自己搭建一个站点，或许能激发一点写的欲望，也更有点成就感了。在双十一看阿里云大狂欢，也剁手买了极其便宜的ECS，配置很低，但也够玩了。然后就花1块钱买了个top的域名，也算是麻雀虽小，五脏俱全。 写博客的几种方式比较当前写博客无非这几种方式： 基于已有网站和平台，老平台有csdn、博客园等，以及新平台的简书、知乎、公众号等； 自建服务器搭建，选择开源的博客平台，我所见过的，按语言分有以下这些： Java halo PHP WordPress JavaScript Hexo VuePress 感觉Hexo和VuePress还是挺像的，经过比较，最后选择Hexo这个框架，一是简单，二是支持markdown，可以直接生成静态网站，三是支持主题，简洁漂亮现代化。其实这些VuePress都是支持的，不选择VuePress一个是因为我更习惯写React，二是Hexo就是做博客的，而VuePress明显功能更多。 虽然买了云服务器和域名，感觉还是把博客放在github pages上更好一些，当然同时也会同步放在自己的服务器上，下一篇就写[ Hexo + GitHub Pages 搭建个人博客 ]。","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.zhushuaibing.top/tags/Hexo/"}]}]